{"version":3,"sources":["goods.js","App.tsx","index.tsx"],"names":["App","state","selectedGood","getTitle","length","slice","join","clearList","setState","selectGood","good","prev","removeGood","filter","elem","this","className","type","onClick","goodsFromServer","map","includes","React","Component","ReactDOM","render","document","getElementById"],"mappings":"sOAAe,G,MAAA,CACb,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,OCDWA,EAAb,4MACEC,MAAyB,CACvBC,aAAc,CAAC,QAFnB,EAKEC,SAAW,WACT,IAAQD,EAAiB,EAAKD,MAAtBC,aAER,OAA4B,IAAxBA,EAAaE,OACR,oBAGmB,IAAxBF,EAAaE,OACT,GAAN,OAAUF,EAAa,GAAvB,gBAGI,GAAN,OAAUA,EAAaG,MAAM,EAAGH,EAAaE,OAAS,GAAGE,KAAK,MAA9D,gBAA2EJ,EAAaA,EAAaE,OAAS,KAhBlH,EAmBEG,UAAY,WACV,EAAKC,SAAS,CAAEN,aAAc,MApBlC,EAuBEO,WAAa,SAACC,GACZ,EAAKF,UAAS,SAACG,GAAD,MAAW,CACvBT,aAAa,GAAD,mBAAMS,EAAKT,cAAX,CAAyBQ,SAzB3C,EA6BEE,WAAa,SAACF,GACZ,EAAKF,UAAS,SAACG,GAAD,MACZ,CACET,aAAa,YAAKS,EAAKT,aAAaW,QAAO,SAAAC,GAAI,OAAIA,IAASJ,WAhCpE,4CAqCE,WAAU,IAAD,OACCR,EAAiBa,KAAKd,MAAtBC,aAER,OACE,uBAAMc,UAAU,MAAhB,UACE,yBAAQA,UAAU,cAAlB,UACE,oBAAIA,UAAU,aAAd,SACGD,KAAKZ,aAGPD,EAAaE,OAEV,wBACEa,KAAK,SACLD,UAAU,+BACVE,QAASH,KAAKR,UAHhB,mBAQA,QAGN,6BAEIY,EAAgBC,KAAI,SAAAV,GAAI,OAEtB,cADA,CACA,MAEEM,UAAWd,EAAamB,SAASX,GAC7B,oBACA,OAJN,UAMGA,EAEER,EAAamB,SAASX,GAWnB,wBACEO,KAAK,SACLD,UAAU,gCACVE,QAAS,kBAAM,EAAKN,WAAWF,IAHjC,oBATA,wBACEO,KAAK,SACLD,UAAU,iCACVE,QAAS,kBAAM,EAAKT,WAAWC,IAHjC,sBATDA,eAjErB,GAAyBY,IAAMC,WCN/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.83dca26b.chunk.js","sourcesContent":["export default [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n","import React from 'react';\nimport './App.scss';\n\nimport goodsFromServer from './goods';\n\ntype State = {\n  selectedGood: string[];\n};\n\nexport class App extends React.Component<{}, State> {\n  state: Readonly<State> = {\n    selectedGood: ['Jam'],\n  };\n\n  getTitle = () => {\n    const { selectedGood } = this.state;\n\n    if (selectedGood.length === 0) {\n      return 'No goods selected';\n    }\n\n    if (selectedGood.length === 1) {\n      return `${selectedGood[0]} is selected`;\n    }\n\n    return `${selectedGood.slice(0, selectedGood.length - 1).join(', ')} and ${selectedGood[selectedGood.length - 1]}`;\n  };\n\n  clearList = () => {\n    this.setState({ selectedGood: [] });\n  };\n\n  selectGood = (good: string) => {\n    this.setState((prev) => ({\n      selectedGood: [...prev.selectedGood, good],\n    }));\n  };\n\n  removeGood = (good: string) => {\n    this.setState((prev) => (\n      {\n        selectedGood: [...prev.selectedGood.filter(elem => elem !== good)],\n      }\n    ));\n  };\n\n  render() {\n    const { selectedGood } = this.state;\n\n    return (\n      <main className=\"App\">\n        <header className=\"App__header\">\n          <h1 className=\"App__title\">\n            {this.getTitle()}\n          </h1>\n\n          {selectedGood.length\n            ? (\n              <button\n                type=\"button\"\n                className=\"App__clear button is-warning\"\n                onClick={this.clearList}\n              >\n                Clear\n              </button>\n            )\n            : null}\n        </header>\n\n        <ul>\n          {\n            goodsFromServer.map(good => (\n              // eslint-disable-next-line max-len\n              <li\n                key={good}\n                className={selectedGood.includes(good)\n                  ? 'Good Good--active'\n                  : 'Good'}\n              >\n                {good}\n                {\n                  !selectedGood.includes(good)\n                    ? (\n                      <button\n                        type=\"button\"\n                        className=\"Good__select button is-success\"\n                        onClick={() => this.selectGood(good)}\n                      >\n                        Select\n                      </button>\n                    )\n                    : (\n                      <button\n                        type=\"button\"\n                        className=\"Good__remove button is-danger\"\n                        onClick={() => this.removeGood(good)}\n                      >\n                        Remove\n                      </button>\n                    )\n                }\n              </li>\n            ))\n          }\n        </ul>\n      </main>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}